'
' File Operation OF_ Definitions
'
Global Const OF_READ = &H0
Global Const OF_WRITE = &H1
Global Const OF_READWRITE = &H2
Global Const OF_SHARE_COMPAT = &H0
Global Const OF_SHARE_EXCLUSIVE = &H10
Global Const OF_SHARE_DENY_WRITE = &H20
Global Const OF_SHARE_DENY_READ = &H30
Global Const OF_SHARE_DENY_NONE = &H40
Global Const OF_PARSE = &H100
Global Const OF_DELETE = &H200
Global Const OF_CANCEL = &H800
Global Const OF_CREATE = &H1000
Global Const OF_PROMPT = &H2000
Global Const OF_EXIST = &H4000
Global Const OF_REOPEN = &H8000
 
 '*************************************************
' *                                                 *
' *   DDDDDD     4444    00000            HH   HH   *
' *   DD   DD   44 44   00   00           HH   HH   *
' *   DD   DD  44  44   00   00           HH   HH   *
' *   DD   DD  44  44   00   00           HHHHHHH   *
' *   DD   DD  4444444  00   00           HH   HH   *
' *   DD   DD      44   00   00   ..      HH   HH   *
' *   DDDDDD       44    00000    ..      HH   HH   *
' *                                                 *
' ***************************************************
' *   Version 3.20                       03/20/94   *
' *************************************************


' DIALOG/4x standard header for "C"





'
' * Dialog/4x driver function codes
'

Global Const F_SSTART = 1             ' System start
Global Const F_SPARMS = 2             ' Set global parameters
Global Const F_SSTOP = 3              ' System stop
Global Const F_CHSTOP = 4             ' Channel stop
Global Const F_CHSTAT = 5             ' Get channel status block
Global Const F_SETH = 6               ' Set hook switch
Global Const F_SETCST = 7             ' Set CST mask
Global Const F_CLRDT = 8              ' Clear dtmf buffer
Global Const F_GETDT = 9              ' Get dtmf digit
Global Const F_RECB = 10              ' Record to buffer
Global Const F_PLAYB = 11             ' Playback from buffer
Global Const F_RECF = 12              ' Record to file
Global Const F_PLAYF = 13             ' Playback from file
Global Const F_DIAL = 14              ' Dial string
Global Const F_GETDTS = 15            ' Get dtmf string
Global Const F_GETEVT = 16            ' Get next event
Global Const F_SCHED = 18             ' Scheduler time slice
Global Const F_XPLAYF = 19            ' Extended play function
Global Const F_PLAYGTG = 20           ' General tone generation
Global Const F_TNINFO = 21            ' Get tone info
Global Const F_TNFLUSH = 22           ' Flush tone info buffer
Global Const F_GETCAR = 27            ' Get the Call Analysis Results
Global Const F_SXPARM = 28            ' Set ext'd shared ram parms funct
Global Const F_SCPARM = 29            ' Set channel parameters
Global Const F_CALL = 30              ' Call a numbr using call analysis
Global Const F_SETD = 31              ' Set the digit control mask
Global Const F_GETVER = 32            ' Get the current driver vers numb
Global Const F_PLAYUB = 34            ' Playback from a users envir bufr
Global Const F_RECUB = 35             ' Record to a users envir buffer
Global Const F_GETCOM = 36            ' Get the comm area
Global Const F_PUTCOM = 37            ' Put the comm area
Global Const F_STPARM = 38            ' Set channel parameter
Global Const F_WINK = 39              ' Perform wink command
Global Const F_ROUTETS = 40           ' Perform timeslot routing
Global Const F_ADDTONE = 43           ' Add current tone to channel
Global Const F_BUILDTONE = 44         ' Build temporary tone
Global Const F_DELTONES = 45          ' Delete all tones from channel
Global Const F_TNSTAT = 46            ' Enable/disable tones
Global Const F_XCALL = 47             ' Call number(call analysis w/term)
Global Const F_ADJSV = 48             ' Adjust S/V conditions
Global Const F_SETSVCOND = 49         ' Set S/V adjustment conditions
Global Const F_CLRSVCOND = 51         ' Clear S/V adjust conditions
Global Const F_GETCURSV = 52          ' Get S/V adjustment conditions
Global Const F_SETSVMT = 53           ' Update S/V modification table
Global Const F_GETSVMT = 54           ' Read S/V modification table
Global Const F_READQUAL = 55          ' Read qualification template
Global Const F_UPDQUAL = 56           ' Write qualification template
Global Const F_CHGCALLP = 57          ' Change Call Analysis tones
Global Const F_SERNUM = 59            ' Get the Serial number
Global Const F_LISTEN = 60            ' Get the Serial number
Global Const MAXFCN = 60              ' Max(last) Dialog\4x fcn number



Global Const MINMFCN = 80             ' Min(first) AMX8x fcn number
Global Const F_MSTART = 80            ' Start all AMX8x boards
Global Const F_MOFF = 81              ' Disconnect all AMX8x switches
Global Const F_MMK = 82               ' Connect the specified AMX8x chs
Global Const F_MBRK = 83              ' Disconnect the specified AMX8 ch
Global Const F_MMASK = 84             ' Set AMX8x mask for a channel
Global Const F_MSTOP = 85             ' Stop all AMX8x boards
Global Const F_RSTART = 86            ' Start ringing an AMX8 connection
Global Const F_RSET = 87              ' Set AMX81 ring parms for a conn
Global Const MAXMFCN = 87             ' Max(last) AMX8x fcn number

Global Const MINID = 129              ' Min AMX8x telephone station ID

'
' * Values for STATUS byte in the CSB
'
Global Const S_STOP = 0               ' Channel is stopped
Global Const S_RECORD = 1             ' Channel is in record mode
Global Const S_PLAY = 2               ' Channel is in playback mode
Global Const S_GETDTS = 3             ' Channel is getting a DTMF string
Global Const S_OFFH = 4               ' Channel is waiting for offhook
Global Const S_DIAL = 5               ' Channel is dialing
Global Const S_ONH = 6                ' Channel is waiting for onhook
Global Const S_CALL = 7               ' Channel is in call analysis stat
Global Const S_PARM = 8               ' Channel parameter is being upd
Global Const S_WINK = 9               ' Channel is waiting for wink cmpl
Global Const S_PLAYGTG = 10           ' Channel is waiting for tone cmpl

'
' * Hook states
'
Global Const H_OFFH = 0               ' Off hook
Global Const H_ONH = 1                ' On hook

'
' * Values for termination types (last_term) and event type
'
Global Const T_NOTERM = 0             ' No termination received
Global Const T_MAXDT = 1              ' Maximum DTMF digits received
Global Const T_TERMDT = 2             ' Terminating DTMF digit received
Global Const T_STOP = 3               ' User stop
Global Const T_DOSERR = 4             ' Dos error
Global Const T_MAXBYT = 5             ' Max bytes reached on play or rec
Global Const T_HFAIL = 6              ' Hardware failure
Global Const T_TIME = 7               ' Multi-tasking function timed out
Global Const T_OFFH = 8               ' Offhook complete
Global Const T_DIAL = 9               ' Dialing complete
Global Const T_SIL = 10               ' Maximum silence received
Global Const T_EOF = 11               ' Eof reached on playback
Global Const T_LCTERM = 12            ' Terminate by drop in loop signal
Global Const T_DFULL = 13             ' Disk full
Global Const T_ONH = 14               ' Onhook complete
Global Const T_MDTERM = 17            ' AMX80 disconnect termination
Global Const T_CATERM = 18            ' Call analysis termination
Global Const T_LCREV = 19             ' Loop signal battery reversal
Global Const T_LC = 20                ' Loop signal drop event
Global Const T_RING = 21              ' Rings received
Global Const T_SILOFF = 22            ' Silence off
Global Const T_SILON = 23             ' Silence on
Global Const T_AMXCON = 24            ' AMX8x channel connect
Global Const T_AMXDIS = 25            ' AMX8x channel disconnect
Global Const T_LCON = 26              ' Loop signal on event
Global Const T_MAXRNG = 27            ' Max rings reached on AMX81 conn
Global Const T_MCTERM = 28            ' Rings termiated by AMX8 connect
Global Const T_MDTMF = 29             ' Terminated by masked DTMF digit
Global Const T_IDTIME = 30            ' Interdigit delay exceeded
Global Const T_NSIL = 31              ' Terminated by a max non-silence
Global Const T_BUFFUL = 32            ' Termination from EMS buffer full
Global Const T_BUFEMP = 33            ' Terminated from EMS buffer empty
Global Const T_EMSERR = 34            ' Terminated by EMS error
Global Const T_EMSLOW = 35            ' EMS buffer low
Global Const T_EMSHI = 36             ' EMS buffer high
Global Const T_STPARM = 37            ' Parameter updated
Global Const T_WINK = 38              ' Wink protocol complete
Global Const T_WKRECV = 39            ' Wink received
Global Const T_DTMF = 40              ' DTMF digit received
Global Const T_TONEON = 41            ' Tone on detect
Global Const T_TONEOFF = 42           ' Tone off detect
Global Const T_BADTERM = 43           ' Invalid termination condition
Global Const T_MTONEON = 44           ' Terminated by Tone On
Global Const T_MTONEOFF = 45          ' Terminated by Tone Off
Global Const T_CAERROR = 46           ' Call progress error
Global Const T_TGERR = 47             ' Tone generation template error
Global Const T_TGCMPLT = 48           ' Tone generation complete
Global Const T_ADSIERR = 49           ' ADSI protocol failure
Global Const MAXTERM = 49             ' Max(last) termination type

'
' * Values for system mode
'
Global Const SM_POLL = 0              ' Polled mode
Global Const SM_EVENT = 1             ' Event driven mode

'
' * Equates for error (return) codes
'
Global Const E_SUCC = 0               ' Function was successful
Global Const E_FAILST = 1             ' Board failed self test
Global Const E_NODT = 2               ' Dtmf buffer empty
Global Const E_SACT = 3               ' System already active
Global Const E_SNACT = 4              ' System not active
Global Const E_BADDL = 5              ' D4x hardware error
Global Const E_BADFCN = 6             ' Invalid function code requested
Global Const E_BADINT = 7             ' Interrupt level not available
Global Const E_BADDCB = 8             ' DCB parmameter error
Global Const E_BADCH = 9              ' Invalid channel number
Global Const E_MTACT = 10             ' Multitasking func already active
Global Const E_MTNACT = 11            ' Multitasking function not active
Global Const E_BADPAR = 12            ' Bad parameter
Global Const E_BADVER = 13            ' Incorrect version of firmware
Global Const E_NOTIMP = 14            ' Function not implemented/avail
Global Const E_NOTERM = 15            ' Terminating cond not specified
Global Const E_NOMEM = 16             ' Insufficent buffer mem available
Global Const E_DOSERR = 24            ' DOS error (DOS error code in al)
Global Const E_DSKCNT = 25            ' Error in data read/wrote to disk
Global Const E_NOAMX = 26             ' No AMX8x boards present
Global Const E_AMXON = 27             ' AMX 8xs already started
Global Const E_AMXOFF = 28            ' AMX 8xs already stopped
Global Const E_BADXY = 29             ' Invalid X,Y coordinate
Global Const E_BADPRT = 30            ' Bad AMX8x tel. station ID specified
Global Const E_BADCUR = 31            ' Bad cursor position specified
Global Const E_EMSSW = 32             ' EMM not installed or corrupted
Global Const E_EMSERR = 33            ' EMM reported error
Global Const E_NOVBUF = 34            ' No buffer alloc for EMS ram disk
Global Const E_TSBADSLOT = 35         ' Bad timeslot number
Global Const E_TIMEOUT = 36           ' Timer expired
Global Const E_BADPROD = 37           ' Not supported by this product
Global Const E_TONEID = 38            ' Bad tone template id
Global Const E_TNPARM = 39            ' Invalid param in tone template
Global Const E_MAXTMPLT = 40          ' Max tone detection templates
Global Const E_MAXSVCB = 41           ' Invalid number of SVCB blocks
Global Const E_SVMTTYPE = 42          ' Invalid table type specified
Global Const E_SVMTRANGE = 43         ' Entry in SVMT was out of range
Global Const E_BADSVCB = 44           ' Invalid SV condition block(SVCB)
Global Const E_BADADJSIZ = 45         ' Invalid SV adjustment size
Global Const E_QUALID = 46            ' bad qualification template id

'
' * Equates for cst_mask
'
Global Const C_LC = &H1               ' Loop signal drop
Global Const C_RING = &H2             ' Rings received
Global Const C_SILOFF = &H4           ' Silence off
Global Const C_SILON = &H8            ' Silence on
Global Const C_OFFH = &H10            ' Offhook complete
Global Const C_ONH = &H20             ' Onhook complete
Global Const C_LCON = &H40            ' Loop signal on
Global Const C_WKRECV = &H80          ' Recv incoming wink
Global Const C_LCREV = &H100          ' Loop signal reversal

'
' * Equates for set parameter function
'
Global Const CH_WKDLY = &H204         ' Delay before sending wink
Global Const CH_WKOUT = &H205         ' Duration of outgoing wink
Global Const CH_WKMIN = &H206         ' Min on for wink detection
Global Const CH_WKMAX = &H207         ' Max on for wink detection
Global Const RATE_PLAY = &HE01        ' Parm id for playback sampling rate
Global Const RATE_REC = &HE02         ' Parm id for record sampling rate
Global Const WALLPARM = &HE03         ' Parm id for wall parameter
Global Const CH_MINREVON = &H419      ' Min LC reversal on time
Global Const CH_MINREVOFF = &H419     ' Min LC reversal off time
			      
Global Const SR_6K = 6000             ' Parm value for 6KHz
Global Const SR_8K = 8000             ' Parm value for 8KHz

'
' * Equates for digit_ctl_mask
'
Global Const D_DTMF = 1               ' DTMF digit detection enable
Global Const D_LPD = 2                ' Loop pulse digit detect enabled
Global Const D_DPDZ = 8               ' Dial pulse detection with zero training
Global Const D_DPD = 16               ' Dial pulse detection without zero training

'
' * Equates for digit_ctl_type
'
Global Const DT_FLUSH = 1             ' Flush dtmf digit buffer
Global Const DT_QUEUE = 2             ' Put dtmf digits onto event queue


'
' * Equates for channel error conditions
'
Global Const X_NOERR = 0              ' No error
Global Const X_BUFERR = 1             ' Error occurred


'
' * Record mode types  (bit mapped)
'
Global Const RM_NORM = 0              ' Normal record
Global Const RM_SCOMP = 1             ' Compress sil. from incoming data
Global Const RM_RDISK = 4             ' I/O from an EMS ram disk
Global Const RM_ALAW = &H10           ' Record A-law data
Global Const RM_ADPCM = 0             ' ADPCM encoding
Global Const RM_PCM = &H100           ' Mu Law PCM mode
Global Const RM_SR8 = &H200           ' 8KHz sampling rate
Global Const RM_NOAGC = &H400         ' Turn off AGC
Global Const RM_SR6 = &H800           ' 6KHz sampling rate
Global Const RM_DOSBUF = &H1          ' Use DOS buffers for recuser


'
' * Play mode types    (bit mapped)
'
Global Const PM_NORM = 0              ' Normal playback
Global Const PM_NDX = 1               ' Indexed playback
Global Const PM_RDISK = 4             ' I/O from an EMS ram disk
Global Const PM_FILES = 8             ' Multiple file handles for index play
Global Const PM_ALAW = &H10           ' Play A-law data
Global Const PM_ADPCM = 0             ' ADPCM encoded file
Global Const PM_PCM = &H100           ' Mu Law PCM encoded file
Global Const PM_SR8 = &H200           ' 8KHz sampled file
Global Const PM_SR6 = &H800           ' 6KHz sampled file
Global Const PM_ADSI = &H2000         ' ADSI data transfer
Global Const PM_RAW = &H4000          ' Raw PCM mode
Global Const PM_DOSBUF = &H1          ' Use DOS buffers for playuser

'
' * Bit mask for rwb_flags in RWB
'
Global Const RW_DINIT = 1             ' Touch tone initiation on/off
Global Const RW_TONE = 2              ' Tone before rec/playback on/off
Global Const RW_DELAY = 4             ' Inter-digit delay starts on first digit
Global Const RW_10MSEC = 8            ' 10 msec unit for maxsec (-y option)
Global Const RW_100MSEC = &H10        ' 100 msec unit for maxsec (-y option)


'
' * Bit mask for AMX8x event mask
'
Global Const A_CON = 1                ' AMX8x connect (pickup)
Global Const A_DIS = 2                ' AMX8x disconnect (hangup)


'
' * Bit mask for line status register
'
Global Const LS_CARNG = &H4           ' Call analysis detecting ring
Global Const LS_HOOK = &H8            ' Hook status bit
Global Const LS_RING = &H10           ' Ring current bit
Global Const LS_LOOP = &H20           ' Loop current bit
Global Const LS_TT = &H40             ' Touch tone is waiting to be read
Global Const LS_SIL = &H80            ' Silence bit


'
' * Call Analysis termination data types/call status values
'
Global Const CA_BUSY = 7              ' Called line is busy
Global Const CA_NOAN = 8              ' Called line did not answer
Global Const CA_NORNG = 9             ' Called line did not ring
Global Const CA_CONN = 10             ' Called line connected
Global Const CA_OPINT = 11            ' Called line recvd oper intercept
Global Const CA_NODIALTONE = 17       ' Called line recvd no dialtone
Global Const CA_FAXTONE = 18          ' Called line recvd fax tone

'
' * Call Analysis connection type
'
Global Const CON_CAD = 1              ' Cadence break
Global Const CON_LPC = 2              ' Loop current drop
Global Const CON_PVD = 3              ' Positive Voice Detection
Global Const CON_PAMD = 4             ' Positive Answering Machine Detection

'
' * Call Analysis CPB intflg
'
Global Const OPTEN = 1                ' Enable operator intercept w/connect
Global Const OPTDIS = 2               ' Disable operator
Global Const OPTCON = 3               ' Enable operator intercept w/o connect
Global Const PVD_ENABLE = 4           ' Enable Positive Voice Detection(PVD)
Global Const PVD_OPTEN = 5            ' Enable PVD + OPTEN
Global Const PVD_OPTCON = 6           ' Enable PVD + OPTCON
Global Const PAMD_ENABLE = 7          ' Enable PAMD w/ no Operator intercept
Global Const PAMD_OPTEN = 8           ' Enable PAMD with Operator intercept

'
' * Call Analysis error codes
'
Global Const MEMERR = 1               ' Out of memory trying to create SIT
Global Const TMOUTON = 2              ' Timeout waiting for a SIT tone
Global Const TMOUTOFF = 3             ' SIT tone too long
Global Const UNEXPTN = 4              ' Unexpected SIT tone
Global Const MAXFRQERR = 5            ' Invalid mxtimefrq field in CPB far
Global Const UPFRQERR = 6             ' Invalid upper frequency selection
Global Const LGTUERR = 7              ' Lower frequency > upper frequency
Global Const OVRLPERR = 8             ' Overlap in selected SIT tones

'
' * Masked DTMF termination/initiation equates
'
Global Const DM_D = &H1               ' Mask for DTMF d.
Global Const DM_1 = &H2               ' Mask for DTMF 1.
Global Const DM_2 = &H4               ' Mask for DTMF 2.
Global Const DM_3 = &H8               ' Mask for DTMF 3.
Global Const DM_4 = &H10              ' Mask for DTMF 4.
Global Const DM_5 = &H20              ' Mask for DTMF 5.
Global Const DM_6 = &H40              ' Mask for DTMF 6.
Global Const DM_7 = &H80              ' Mask for DTMF 7.
Global Const DM_8 = &H100             ' Mask for DTMF 8.
Global Const DM_9 = &H200             ' Mask for DTMF 9.
Global Const DM_0 = &H400             ' Mask for DTMF 0.
Global Const DM_S = &H800             ' Mask for DTMF *.
Global Const DM_P = &H1000            ' Mask for DTMF #.
Global Const DM_A = &H2000            ' Mask for DTMF a.
Global Const DM_B = &H4000            ' Mask for DTMF b.
Global Const DM_C = &H8000            ' Mask for DTMF c.

'
' * GTD Amplitude define
'
Global Const GT_DEF_MIN = -50         ' Minimum default amplitude
Global Const GT_DEF_MAX = 0           ' Maximum default amplitude

'
' * Speed and Volume(S/V) Control
'
Global Const SV_SPEEDTBL = &H1        ' Modify speed
Global Const SV_VOLUMETBL = &H2       ' Modify volume
		       
Global Const SV_ABSPOS = &H0          ' Absolute position
Global Const SV_RELCURPOS = &H10      ' Relative position from current position
Global Const SV_TOGGLE = &H20         ' Toggle
		       
Global Const SV_WRAPMOD = &H10        ' S/V Modification Table wraparound enable
Global Const SV_SETDEFAULT = &H20     ' Reset to default S/V Modification Table
Global Const SV_LEVEL = &H100         ' Digit level sensitive
Global Const SV_BEGINPLAY = &H200     ' Apply play adjustment at beginning of each playback

'
' * S/V toggle modes for Play Adjustment Conditions
'
Global Const SV_TOGORIGIN = &H0       ' Toggle between origin and last modified position
Global Const SV_CURORIGIN = &H1       ' Reset current position to the origin
Global Const SV_CURLASTMOD = &H2      ' Reset current position to last modified position
Global Const SV_RESETORIG = &H3       ' Reset current position and last modified state to origin

'
' * S/V defines for far pascal dl_addspddig()
'
Global Const SV_ADD10PCT = 1          ' Speed up playback 10 percent
Global Const SV_ADD20PCT = 2          ' Speed up playback 20 percent
Global Const SV_ADD30PCT = 3          ' Speed up playback 30 percent
Global Const SV_ADD40PCT = 4          ' Speed up playback 40 percent
Global Const SV_ADD50PCT = 5          ' Speed up playback 50 percent
Global Const SV_SUB10PCT = -1         ' Slow down playback 10 percent
Global Const SV_SUB20PCT = -2         ' Slow down playback 20 percent
Global Const SV_SUB30PCT = -3         ' Slow down playback 30 percent
Global Const SV_SUB40PCT = -4         ' Slow down playback 40 percent
Global Const SV_SUB50PCT = -5         ' Slow down playback 50 percent
Global Const SV_NORMAL = &HFF         ' Set playback to normal speed/vol

'
' * S/V defines for far pascal dl_addvoldig()
'
Global Const SV_ADD2DB = 1            ' Increase volume of playback 2dB
Global Const SV_ADD4DB = 2            ' Increase volume of playback 4dB
Global Const SV_ADD6DB = 3            ' Increase volume of playback 6dB
Global Const SV_ADD8DB = 4            ' Increase volume of playback 8dB
Global Const SV_SUB2DB = -1           ' Decrease volume of playback 2dB
Global Const SV_SUB4DB = -2           ' Decrease volume of playback 4dB
Global Const SV_SUB6DB = -3           ' Decrease volume of playback 6dB
Global Const SV_SUB8DB = -4           ' Decrease volume of playback 8dB

'
' * Tone definitions for Call Analysis
'
Global Const TID_FIRST = 250
Global Const TID_DIAL_LCL = 250
Global Const TID_DIAL_INTL = 251
Global Const TID_DIAL_XTRA = 252
Global Const TID_BUSY1 = 253
Global Const TID_RNGBK1 = 254
Global Const TID_BUSY2 = 255
Global Const TID_RNGBK2 = 256
Global Const TID_FAX1 = 258
Global Const TID_FAX2 = 259
Global Const TID_LAST = 259

'
' * PAMD decision type (spdval field of the CPB)
'
Global Const PAMD_FULL = 1           ' Wait for full decision (after ansrsize)
Global Const PAMD_QUICK = 2          ' Decide as soon as voice decides

Global Const PAMD_QUAL1TMP = 11      ' PAMD Qualifcation template
Global Const PAMD_QUAL2TMP = 12      ' PAMD Qualifcation template

'
' * Call Analysis Tone classes
'
Global Const TNTYP_RNGBACK = 1        ' Ringback Class
Global Const TNTYP_BUSY = 2           ' Busy Class
Global Const TNTYP_FAX = 3            ' FAX tone Class

'
' * Battery Reversal equates
'
Global Const LC_NORM2REV = 0
Global Const LC_REV2NORM = 1


'
' * Channel Parameter Block structure
'
Global Const CPB_SIZE = 128           ' Size of CPB in bytes

Type CPB
 dtpl_dly          As String * 1' Playback DTMF delay in 10ms intervals
 dt_edge           As String * 1' DTMF message edge select
 dtrc_dly          As Integer   ' Record DTMF delay in 10ms intervals
 sb_siz            As Integer   ' Silence buffer size for this channel
 nbrdna            As String * 1' # of rings before no answer
 stdely            As Integer   ' Delay after dialing before analysis
 cnosig            As Integer   ' Duration of no signal time out delay
 lcdly             As Integer   ' Delay after dial before lc drop connect
 lcdly1            As Integer   ' Delay after lc drop con. before msg
 hedge             As String * 1' Edge of answer to send connect message
 cnosil            As Integer   ' Initial continuous noise timeout delay
 lo1tola           As String * 1' % acceptable pos. dev of short low sig
 lo1tolb           As String * 1' % acceptable neg. dev of short low sig
 lo2tola           As String * 1' % acceptable pos. dev of long low sig
 lo2tolb           As String * 1' % acceptable neg. dev of long low sig
 hi1tola           As String * 1' % acceptable pos. dev of high signal
 hi1tolb           As String * 1' % acceptable neg. dev of high signal
 lo1bmax           As Integer   ' Maximum interval for shrt low for busy
 lo2bmax           As Integer   ' Maximum interval for long low for busy
 hi1bmax           As Integer   ' Maximum interval for 1st high for busy
 nsbusy            As String * 1' Num. of highs after nbrdna busy check
 logltch           As Integer   ' Silence deglitch duration
 higltch           As Integer   ' Non-silence deglitch duration
 lo1rmax           As Integer   ' Max. short low  dur. of double ring
 lo2rmin           As Integer   ' Min. long low  dur. of double ring
 intflg            As String * 1' Operator intercept mode
 intfltr           As String * 1' Minimum signal to qualify freq. detect
 cpbrfu1           As String * 14' Reserved for future use
 spdeb             As Integer   ' Trailing edge silence ptr debounce
 hisiz             As Integer   ' Used to determine which lowmax to use
 alowmax           As Integer   ' Max. low before con. if high >hisize
 blowmax           As Integer   ' Max. low before con. if high <hisize
 nbrbeg            As String * 1' Number of rings before analysis begins
 hi1ceil           As Integer   ' Maximum 2nd high dur. for a retrain
 lo1ceil           As Integer   ' Maximum 1st low dur. for a retrain
 lowerfrq          As Integer   ' Lower allowable frequency in Hz
 upperfrq          As Integer   ' Upper allowable frequency in Hz
 timefrq           As String * 1' Total duration of good signal required
 rejctfrq          As String * 1' Allowable % of bad signal
 maxansr           As Integer   ' Maximum duration of answer
 ansrdgl           As Integer   ' Silence deglitching value for answer
 pvdmxper          As String * 1' Percent of maximum sum
 pvdszwnd          As Integer   ' Length of window in 10ms
 pvddly            As Integer   ' Delay time before starting PVD for each nonsilence in 10ms
 mxtimefrq         As Integer   ' Max. time for first frequency to remain in bound
 lower2frq         As Integer   ' Lower bound for second frequency
 upper2frq         As Integer   ' Upper bound for second frequency
 time2frq          As Integer   ' Min. time for second frequency to remain in bound
 mxtime2frq        As Integer   ' Max. time for second frequency to remain in bound
 lower3frq         As Integer   ' Lower bound for third frequency
 upper3frq         As Integer   ' Upper bound for third frequency
 time3frq          As Integer   ' Min. time for third frequency to remain in bound
 mxtime3frq        As Integer   ' Max. time for third frequency to remain in bound
 dtn_pres          As Integer   ' length of valid dialtone  (1 sec)
 dtn_npres         As Integer   ' max time to wait for dial tone (3 sec)
 dtn_deboff        As Integer   ' dialtone off debouncer (100 msec)
 pamd_failtime     As Integer   ' Wait for PAMD/PVD after cadence break (4 sec)
 pamd_minring      As Integer   ' Min. allowable ring duration (1.9 sec)
 pamd_spdval       As String * 1' full/quick PAMD decision (1 - full)
 pamd_qtemp        As String * 1' Qualification to use for PAMD(11)
 noanswer          As Integer   ' noanswer after 1st far pascal ring(30sec)
 maxintering       As Integer   ' intering delay before connect (8sec)
 cpbrfu            As String * 11' Reserved for future use
End Type


'
' * DIALOG/4x Control Block data structure
'
Global Const DCB_SIZE = 128           ' Size of DCB far

Type DCB
 flashchr          As String * 1' Flash char in dialing string
 flashtm           As Integer   ' Flash time 10ms units
 pausetm           As Integer   ' Pause time 10ms units
 digrate           As Integer   ' Digitizing rate in Hz
 sch_tm            As Integer   ' Maximum time slice given to scheduler
 p_bk              As Integer   ' Pulse break interval in 10ms units
 p_mk              As Integer   ' Pulse make interval in 10ms units
 p_idd             As Integer   ' Pulse dial inter-digit delay in 10ms
 t_idd             As Integer   ' Tone dial inter-digit delay in 10ms
 oh_dly            As Integer   ' Offhook delay interval in 10 ms
 r_on              As Integer   ' Min. ring on interval in 100ms units
 r_off             As Integer   ' Min. ring off interval in 100ms units
 r_ird             As Integer   ' Delay after ring cnt is reset in 100ms
 s_bnc             As Integer   ' Sil. message debounce interval in 10ms
 dcbrfu1           As Integer   ' Reserved for future use
 ttdata            As String * 1' Duration of DTMF digit in 10ms units
 minpdon           As String * 1' Min. dur. for lc on for a valid pulse
 minpdoff          As String * 1' Min. dur. for lc off for a valid pulse
 minipd            As Integer   ' Min. interpulse digit time for lc on
 minlcoff          As Integer   ' Min. dur. of lc off for CST_CUR_ON
 dcbrfu2           As String * 4' Reserved for future use
 redge             As String * 1' Ring edge
 maxpdoff          As Integer   ' Max. dur. for pd make
 dcbrfu            As String * 85' Reserved for future use
End Type

' Global Const  dcbrfu3 =  redge         ' backward compatible redge name


'
' * Channel status block data structure
'

Global Const CSB_SIZE = 32            ' Size of CSB far

Type CSB
 cstmask           As Integer   ' Call status interupt mask
 status            As String * 1' Current channel status
 cherr             As String * 1' Set if buffer under/overflow detected
 mtfcn             As String * 1' Multitasking function in progress
 lastterm          As Integer   ' Last termination event
 bufcnth           As Integer   ' High order data transfer count
 bufcnt            As Integer   ' Low order data transfer count
 dtmfrcvd          As String * 1' Number of DTMFs in ch.'s DTMF buffer
 doserr            As Integer   ' Last DOS error
 linestat          As String * 1' Current line status
 callstat          As Integer   ' Call Analysis termination type
 intrfreq          As Integer   ' Intercept frequency in 20 Hz
 dig_mask          As String * 1' Digit control mask
 csbrfu1           As String * 1' Reserved for future use
 csbrfu            As String * 11' Reserved for future use
End Type


'
' * Read/Write block structure
'

Global Const RWB_SIZE = 32            ' Size in bytes of RWB far
Global Const XRWB_SIZE = 64           ' Size in bytes of XRWB

Type RWB
 filehndl          As Integer   ' Open DOS handle for file transfer
 xferoff           As Integer   ' Transfer buffer address offset
 xferseg           As Integer   ' Transfer buffer address segment
 maxbyteh          As Integer   ' High order max # of bytes to xfer
 maxbyte           As Integer   ' Low order max # of bytes to xfer
 maxsec            As Integer   ' Max # of secs before timeout term
 maxdtmf           As String * 1' Max # of DTMF digits to cause term
 termdtmf          As String * 1' DTMF digit which will cause term
 maxsil            As String * 1' Seconds of silence to cause term
 loopsig           As String * 1' Terminate on drop in loop current
 indexoff          As Integer   ' Index table address offset
 indexseg          As Integer   ' Index table address segment
 rwbflags          As String * 1' Record/Playback initiation bits
 rwbdata1          As String * 1' Initiation tone duration (bits 0-3)
 amxterm           As String * 1' Terminating AMX telephone station ID
 curpos            As Integer   ' Low order cursor position
 curposh           As Integer   ' High order cursor position
 isxrwb            As String * 1' Extended RWB flag
 rwbrfu2           As String * 4' Reserved for future use

'
' * Extended RWB fields
'
 emsmode           As Integer   ' Playuser/recuser mode field
 xrwbrfu1          As String * 4' Reserved for future use
 dtinit            As Integer   ' DTMF function initiator set
 dtterm            As Integer   ' DTMF function terminator set
 intrdig           As String * 1' Maximum interdigit delay in secs
 maxnsil           As String * 1' Max # of secs of non-sil to cause term
 emsthrsh          As Integer   ' Min byte count before warning
 trmdig_cnt        As Integer   ' Count of entries in the digit termination array
 trmdig_ofs        As Integer   ' Offset of digit termination array
 trmdig_seg        As Integer   ' Segment of digit termination array
 toneon_cnt        As Integer   ' Count of entries in the tone on termination array
 toneon_ofs        As Integer   ' Offset of tone on termination array
 toneon_seg        As Integer   ' Segment of tone on termination array
 tonoff_cnt        As Integer   ' Count of entries in the tone off termination array
 tonoff_ofs        As Integer   ' Offset of tone off termination array
 tonoff_seg        As Integer   ' Segment of tone off termination array
 xrwbrfu           As String * 32' Reserved for future use
End Type


'
' * Call analysis results structure
'

Global Const CAR_SIZE = 32            ' Size of the structure

Type CAR
 termtype          As String * 1' Last call progress term. for this ch
 frqout            As String * 1' Percent of frequency out of bounds
 frqherz           As Integer   ' Frequency detected in Hz
 sizehigh          As Integer   ' Dur. of non-silent period. 10ms units
 shortlow          As Integer   ' Dur. of shorter silent period
 longlow           As Integer   ' Duration of longer silent period
 ansrsize          As Integer   ' Duration of answer in 10ms units
 conntype          As String * 1' Connection type
 dtnfail           As String * 1' Dial Tone failure character
 freqdur           As Integer   ' The duration of the first frequency
 frqherz2          As Integer   ' The frequency of the second tone
 freqdur2          As Integer   ' The duration of the second frequency
 frqherz3          As Integer   ' The frequency of the third tone
 freqdur3          As Integer   ' The duration of the third frequency
 stoptype          As Integer   ' reason for Call Progress stop
 tone_id           As Integer   ' The tone ID that caused termination
 carrfu            As String * 4' Reserved for future use
End Type


'
' * Application to Device Driver Communication Area
'

Global Const ADCCB_SIZE = 32

Type ADCCB
 a_d_bct           As Long
 a_d_rfu           As String * 28
End Type


'
' * Device Driver to Application Communication Area
'

Global Const DACCB_SIZE = 32

Type DACCB
 d_a_bct           As Long
 d_a_rfu           As String * 28
End Type



'
' * IDDS system function codes
'
Global Const MIDDSFN = &H70           ' Min(first) IDDS function
Global Const F_DEVSRV = &H70          ' Device level services
Global Const F_EXESRV = &H71          ' Executive level services
Global Const F_DEVCOM = &H75          ' Application level services
Global Const MXIDDSFN = &H75          ' Max(last) IDDS function

'
' * Service function Executive level services function codes
'
Global Const MSEXESFN = &H0           ' Min(first) IDDS function
Global Const FI_APSCH = &H0           ' Inform appl of scheduler entry
Global Const FI_APACT = &H1           ' Inform appl of scheduler activity
Global Const FI_APEVT = &H2           ' Inform appl of event queue entry
Global Const MXEXESFN = &H2           ' Max(last) IDDS function

'
' * Service function Device level services function codes
'
Global Const MSDEVSFN = &H0           ' Min (first) IDDS function
Global Const FI_REGDRV = &H0          ' Register driver
Global Const FI_SIZEQ = &H1           ' Get the memory requirements of a Q
Global Const FI_OPENQ = &H2           ' Request to open a Q
Global Const FI_PUTQ = &H3            ' Enqueue a message
Global Const FI_GETQ = &H4            ' Get a message off a Q
Global Const FI_EMPTYQ = &H5          ' Empty a queue
Global Const FI_FLUSHQ = &H6          ' Flush 1 entry from the queue
Global Const FI_SCANQ = &H7           ' Scan the queue for a value
Global Const FI_GETLVL = &H8          ' Get the h/w interrupt level
Global Const FI_PUTLVL = &H9          ' Store the hardware intr level
Global Const FI_INSINT = &HA          ' Install drivers interrupt hndlr
Global Const FI_UININT = &HB          ' De-install drivers h/w intr hndlr
Global Const FI_GETIV = &HC           ' Get the interrupt vector
Global Const FI_PUTIV = &HD           ' Install this interrupt vector
Global Const FI_GETMSG = &HE          ' Get vector to the intr msg hdlr
Global Const FI_PUTMSG = &HF          ' Install h/w intr msg hdlr
Global Const FI_PUT55 = &H10          ' Install a 55ms timer
Global Const FI_DIS55 = &H11          ' Deinstall a 55ms timer
Global Const FI_ISDRV = &H12          ' Determine if a driver is installed
Global Const FI_SCHED = &H13          ' Call the scheduler
Global Const FI_PAUSE = &H14          ' Wait for a real time interval
Global Const FI_UREG = &H15           ' Unregister a device
Global Const FI_GETREV = &H16         ' Get IDDS revision
Global Const FI_USREVT = &H17         ' Put user event onto event queue
Global Const FI_BEEP = &H18           ' Beep the speaker on error condition
Global Const MXDEVSFN = &H18          ' Max (last) IDDS function


'
' * IDDS error return codes
'
Global Const EI_SUCC = 0              ' Function was successful
Global Const EI_REGERR = 113          ' Driver registration error
Global Const EI_BADHND = 114          ' Bad handle
Global Const EI_BADDEV = 115          ' Bad device type specified
Global Const EI_MAXQS = 116           ' Maximum number of queues
Global Const EI_BADQT = 117           ' Queue type error
Global Const EI_QFULL = 118           ' Queue full
Global Const EI_QMPTY = 119           ' Queue empty
Global Const EI_BADFCN = 120          ' Bad function
Global Const EI_BADPAR = 121          ' Bad parmeter
Global Const EI_VECUSD = 122          ' Vector already in use
Global Const EI_NOIMP = 123           ' Function not implemented


'
' * Defined Device Types
'

Global Const DV_IDDS = 1              ' IDDS device type
Global Const DV_D40 = 2               ' D40 driver type

'
' * User definable devices
'
Global Const DV_USER1 = &HF0          ' User defined device 1
Global Const DV_USER2 = &HF1          ' User defined device 2
Global Const DV_USER3 = &HF2          ' User defined device 3
Global Const DV_USER4 = &HF3          ' User defined device 4
Global Const DV_USER5 = &HF4          ' User defined device 5
Global Const DV_USER6 = &HF5          ' User defined device 6
Global Const DV_USER7 = &HF6          ' User defined device 7
Global Const DV_USER8 = &HF7          ' User defined device 8


'
' * Defined Q Types
'
Global Const Q_NRML = 0               ' Non-prioriorized FIFO Q
Global Const Q_NPSLL = 1              ' Non-priority FIFO Single Linked List

'
' * Miscellaneous
'
Global Const Q_STDREQ = 0             ' Standard request queue handle
Global Const Q_STDEVT = 1             ' Standard event queue handle

 '************************************************************************
' *
' * Event Block - Structure for the get event block function
' *
' *************************************************************************

Type EVTBLK
 devtype           As Integer   ' Device type
 evtcode           As Integer   ' Event code
 evtdata           As Integer   ' Event data
 devchan           As Integer   ' Channel
 memofst           As Integer   ' Far pointer to the data
 memseg            As Integer   '
 board             As Integer   ' Board number
 rfu               As Integer   ' Reserved for future use
End Type



'
' * GLOBAL TONE DETECTION
'

'
' * Masks for functions far pascal dl_enbtone() and far pascal dl_distone()
'
Global Const TONE_ON = 1             ' Enables/disables Tone On messages
Global Const TONE_OFF = 2            ' Enables/disables Tone Off messages

Global Const TONE_ALL = &HFFFF       ' Enables/disables ALL tone messages

'
' * Tone detection modes
'
Global Const TN_LEADING = &H100      ' Leading edge detection
Global Const TN_TRAILING = &H200     ' Trailing edge detection

'
' * Miscellaneous GTD items
'
Global Const TN_DIGTYPE = 5          ' Reserved digit type for user


'
' * GENERAL TONE GENERATION
'

'
' * Tone generation template
'
Type TN_GEN
 tg_dflag          As Integer   ' Dual Tone - 1, Single Tone - 0
 tg_freq1          As Integer   ' Frequency for tone 1 (Hz)
 tg_freq2          As Integer   ' Frequency for tone 2 (Hz)
 tg_ampl1          As Integer   ' Amplitude for tone 1 (dB)
 tg_ampl2          As Integer   ' Amplitude for tone 2 (dB)
 tg_dur            As Integer   ' Duration of generated tone (10ms)
End Type

'
' * For use with tg_dflag parameter in TN_GEN
'
Global Const TN_SINGLE = 0           ' Indicates single tone
Global Const TN_DUAL = 1             ' Indicates dual tone


 '************************************************************************
' *
' * Speed/Volume Adjustment Condition Block(SVCB)
' *
' *************************************************************************

Type SVCB
 type              As Integer   ' Type of adjustment
 adjsize           As Integer   ' Adjustment size
 digit             As String * 1' ASCII digit that causes play adjustment
 digtype           As String * 1' Digit type
End Type

 '************************************************************************
' *
' * Speed/Volume Modification Table(SVMT)
' *
' *************************************************************************

Type SVMT
 decrease          As String * 10'
 origin            As String * 1' Origin
 increase          As String * 10'
End Type


 '************************************************
' *                                                *
' * Tone Information Structure : INTERNAL use only *
' *                                                *
' ************************************************

Type TN_INFO
 tn_frqahi         As Integer   ' actual frequency in Hz of tone with higher amplitude
 tn_frqalo         As Integer   ' actual frequency in Hz of tone with lower amplitude
 tn_on             As Integer   ' actual on time (in 10 msec units)
 tn_off            As Integer   ' actual off time (in 10 msec units)
 tn_rep_cnt        As Integer   ' actual rep count
End Type

' Global Const tn_freq1 = tn_frqahi
' Global Const tn_freq2 = tn_frqalo

 '******************************************************
' *                                                      *
' * Qualification Template Structure : INTERNAL use only *
' *                                                      *
' ******************************************************
 
Type TONE_QUAL
 q_nfrm            As Integer   ' no. of frames required to verify prior to energy drop
 q_snr0            As Integer   ' value of SNR required to begin suspecting tone
 q_snr1            As Integer   ' value of SNR required for all frames not dropping
 q_b0              As Integer   ' value of Broad required to begin suspecting tone
 q_b1              As Integer   ' value of Broad required for all frames not dropping
 q_trat            As Integer   ' maximum value of twist allowed
 q_qmax            As Integer   ' if fail talkoff, but pass qual qmax times, suspect
 q_tnfrm           As Integer   ' number of past frames to test talkoff with
 q_tflg            As Integer   ' talkoff flag
 q_minfrm          As Integer   ' min number of frames a tone must be present to verify
 q_zidflg          As Integer   ' zero inter digit delay flag
 q_oldprm          As Integer   ' set to 1 if old debounce parameters are to be used
End Type

Type PVD_QUAL
 qminsnr           As Integer   ' minimum allowable SNR for voice
 qmaxsnr           As Long      ' maximum allowable SNR for voice
 maxpk             As Integer   ' maximum number of peaks for voice
 maxring           As Integer   ' maximum number of frames for ringback not voice
 ringthres         As Long      ' signal to noise ratio for ringback
 pvdwin            As Integer   ' number of frames in a window sample
 pvdthresh         As Long      ' minimum energy for voice
 pvdrblow          As Integer   ' lower frequency of ringback
 pvdrbhig          As Integer   ' upper frequency of ringback
End Type

'
' *     AMD Quality template structure
'
Type AMD_QUAL
 maxansiz          As Integer   ' Size of answer #1
 maxans2           As Integer
 maxans3           As Integer
 lohiss            As Integer   ' Low hiss (noise) range
 hihiss            As Integer   ' High hiss (noise)
 bhparm            As Integer   ' noise below hiss ratio
 cvthr1            As Integer   ' cv. threshold #1
 cvthr2            As Integer
 maxcvth           As Integer   ' Maximum cv threshold
 nmaxbrod          As Integer   ' Maximum broad band energy - noise
 nmaxerg           As Integer   ' Maximum total energy - noise
 maxsil            As Integer
 voice_thres       As Integer
 sil_thres         As Integer
 bandf_low         As Integer   ' Frequency Band filter, lower limit in hz
 bandf_high        As Integer   ' upper limit in hz
End Type

Type TN_QLT
 gen_qual          As TONE_QUAL
 ' PVD_QUAL  pvd_qual
 ' AMD_QUAL  amd_qual
End Type


 '**********************************************************
' *                                                          *
' *   DDDDDD     4444    00000   LL       IIIIII   BBBBBB    *
' *   DD   DD   44 44   00   00  LL         II     BB   BB   *
' *   DD   DD  44  44   00   00  LL         II     BB   BB   *
' *   DD   DD  44  44   00   00  LL         II     BBBBBB    *
' *   DD   DD  4444444  00   00  LL         II     BB   BB   *
' *   DD   DD      44   00   00  LL         II     BB   BB   *
' *   DDDDDD       44    00000   LLLLLL   IIIIII   BBBBBB    *
' *                                                          *
' ************************************************************
' *   Version 3.91                                03/20/94   *
' **********************************************************

'
' * Defines for compatability to old d40lib versions.
'

'
' * VOPEN function access mode definitions
'


'
' * D40lib function prototypes
'
Declare Sub clrrwb Lib "DLGTIF.DLL" (Prm1 As RWB)
Declare Sub clrxrwb Lib "DLGTIF.DLL" (Prm1 As RWB)
Declare Sub clrdcb Lib "DLGTIF.DLL" (Prm1 As DCB)
Declare Sub clrcpb Lib "DLGTIF.DLL" (Prm1 As CPB)
Declare Function setcparm Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As CPB) As Integer
Declare Function stopch Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function getcstat Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As CSB) As Integer
Declare Function sethook Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function setcst Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function clrdtmf Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function readdtmf Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String) As Integer
Declare Function recbuf Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Function playbuf Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Function recfile Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB, ByVal Prm3 As Integer) As Integer
Declare Function playfile Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Function xplayf Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As RWB) As Integer
Declare Function dial Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String) As Integer
Declare Function callp Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String) As Integer
Declare Function xcallp Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Function getdtmfs Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Function setdmask Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function getver Lib "DLGTIF.DLL" (Prm1 As Integer, Prm2 As Integer) As Integer
Declare Function sched Lib "DLGTIF.DLL" () As Integer
Declare Function getcom Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As DACCB) As Integer
Declare Function putcom Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As ADCCB) As Integer
Declare Function playuser Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String, Prm3 As Integer) As Integer
Declare Function recuser Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String, Prm3 As Integer) As Integer
Declare Function getcar Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As CAR) As Integer
Declare Function sw_on Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function sw_off Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function amx_off Lib "DLGTIF.DLL" () As Integer
Declare Function amx_msk Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function ring Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function set_ring Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer) As Integer
Declare Function putevt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function setiparm Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function wink Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function sb_route Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function sb_rtrcvxmt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_addtone Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_deltones Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function dl_enbtone Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_distone Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_blddt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer, ByVal Prm6 As Integer) As Integer
Declare Function dl_blddtcad Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer, ByVal Prm6%, ByVal Prm7%, ByVal Prm8%, ByVal Prm9%, ByVal Prm10%) As Integer
Declare Function dl_bldst Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer) As Integer
Declare Function dl_bldstcad Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer, ByVal Prm6%, ByVal Prm7%, ByVal Prm8%) As Integer
Declare Sub dl_setgtdamp Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer)
Declare Function dl_playtone Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As RWB) As Integer
Declare Sub dl_bldtngen Lib "DLGTIF.DLL" (Prm1 As TN_GEN, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer, ByVal Prm6 As Integer)
Declare Function dl_adjsv Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer) As Integer
Declare Function dl_setsvcond Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As SVCB) As Integer
Declare Function dl_clrsvcond Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function dl_getcursv Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer, Prm3 As Integer) As Integer
Declare Function dl_setsvmt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As SVMT, ByVal Prm4 As Integer) As Integer
Declare Function dl_getsvmt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As SVMT) As Integer
Declare Function dl_addspddig Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_addvoldig Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer) As Integer
Declare Function dl_gtsernum Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String) As Integer
Declare Function dl_initcallp Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function dl_chgfreq Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer) As Integer
Declare Function dl_chgdur Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, ByVal Prm4 As Integer, ByVal Prm5 As Integer) As Integer
Declare Function dl_chgrepcnt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer) As Integer
Declare Function dl_chgqualid Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer
Declare Function dl_gettninfo Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As TN_INFO) As Integer
Declare Sub dl_flushtn Lib "DLGTIF.DLL" ()
Declare Function dl_getqual Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As TN_QLT) As Integer
Declare Function dl_setqual Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, Prm3 As TN_QLT) As Integer
Declare Function dl_getextqual Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, Prm4 As TN_QLT) As Integer
Declare Function dl_setextqual Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, Prm4 As TN_QLT) As Integer
Declare Sub dl_selqual Lib "DLGTIF.DLL" (ByVal Prm1 As Integer)


'**********************************************************************
' Dialogic TIF support defs: DlgTIF.h                  V1.21  01/01/95
' Copyright (c) 1987-1995 Andrew J. Michalik
'
'**********************************************************************
Global Const MAXDEVCNT = 64                    ' Total # device types allowed
Global Const MAXDIGCNT = 64                    ' Total # active lines allowed
Global Const MAXMPXCNT = 64                    ' Total # active Mpx X allowed
Global Const MAXSERNUM = 32                    ' Maximum serial number length
Global Const TIFVERNUM = &H121                 ' Tel I/F support ver number

Global Const CALLBACK_WINDOW = &H10&           ' Callback window event mode
Global Const CALLBACK_PROC = &H40&             ' Callback proc   event mode
Global Const FORCE_REQUEST = &H100&            ' Force resource reuest

'**********************************************************************
'                  TSR Support routines
'**********************************************************************
Declare Function TifSupIni Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFSupVer Lib "DLGTIF.DLL" () As Integer
Declare Function TifSupTrm Lib "DLGTIF.DLL" () As Integer

Declare Function TIFSysGet Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFSysRel Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFDevGet Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFDevRel Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TifLinGet Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TifLinRel Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFPrtGet Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFPrtRel Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Long) As Integer
Declare Function TIFPolEvt Lib "DLGTIF.DLL" () As Integer

Declare Function MemGetRea Lib "DLGTIF.DLL" (Prm1 As Long, Prm2 As Integer, ByVal Prm3 As Long) As Long
Declare Function MemRelRea Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer

'**********************************************************************
'                  Dialogic Dos support structures
'**********************************************************************
Type TIFEVTBLK
 ulEvtTim          As Long
 ucRsv001          As Long
 ebDlgBlk          As EVTBLK
 ucRsv002          As String * 40
End Type

Type IDCB
 version           As Integer   ' firmware revision
 segment           As Integer   ' segment address
 type              As String * 1' board type
 int_lvl           As String * 1' hardware interrupt level
 bufsize           As Integer   ' size of buffer
 numchan           As String * 1' number of channels
 basechn           As String * 1' base channel - 1
 config            As String * 1' copy of dl_syscfg from d40
 product           As String * 1' copy of dl_product, A/B info
 rfu               As String * 20' 20 chars
End Type

'**********************************************************************
'                  Dialogic Dos support extensions
'**********************************************************************
Declare Function DskFilOpn Lib "DLGTIF.DLL" (ByVal Prm1 As String, ByVal Prm2 As Integer, Prm3 As Integer) As Integer
Declare Function DskFilCre Lib "DLGTIF.DLL" (ByVal Prm1 As String, ByVal Prm2 As Integer, Prm3 As Integer) As Integer
Declare Function DskFilInp Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Any, ByVal Prm3 As Integer, Prm4 As Integer) As Integer
Declare Function DskFilOut Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Any, ByVal Prm3 As Integer, Prm4 As Integer) As Integer
Declare Function DskFilPos Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Long, ByVal Prm3 As Integer, Prm4 As Integer) As Long
Declare Function DskFilLen Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer) As Long
Declare Function DskFilCls Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer) As Integer
Declare Function GetDevEvt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer, Prm3 As Integer, Prm4 As TIFEVTBLK) As Integer
Declare Function GetLinEvt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer, Prm3 As TIFEVTBLK) As Integer
Declare Function ChkDevEvt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer, Prm3 As Integer, Prm4 As TIFEVTBLK, ByVal Prm5 As Integer) As Integer
Declare Function ChkLinEvt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer, Prm3 As TIFEVTBLK, ByVal Prm4 As Integer) As Integer

Declare Function getvctr Lib "DLGTIF.DLL" () As Integer
Declare Function isdrvact Lib "DLGTIF.DLL" (ByVal Prm1 As Integer) As Integer

Declare Function CalDxxInt Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String, Prm3 As Integer, Prm4 As Integer, Prm5 As Any, ByVal Prm6 As Integer) As Integer
Declare Function calld40 Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String, Prm3 As Integer, Prm4 As Integer, Prm5 As Integer) As Integer
Declare Function calld40x Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As String, Prm3 As Integer, Prm4 As Integer, Prm5 As Any) As Integer

Declare Function startsys Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, ByVal Prm2 As Integer, ByVal Prm3 As Integer, Prm4 As Integer) As Integer
Declare Function startamx Lib "DLGTIF.DLL" (ByVal Prm1 As Integer, Prm2 As Integer) As Integer
Declare Function stopamx Lib "DLGTIF.DLL" () As Integer
Declare Function setxparm Lib "DLGTIF.DLL" (Prm1 As DCB) As Integer
Declare Function stopsys Lib "DLGTIF.DLL" () As Integer
Declare Function MVBGetAdr Lib "DLGTIF.DLL" (ByVal Prm1 As String) As Long
Declare Function MVBCopStr Lib "DLGTIF.DLL" (ByVal Prm1 As Long) As String
Declare Sub MVBCopMem Lib "DLGTIF.DLL" (Prm1 As Any, Prm2 As Any, ByVal Prm3 As Integer)
Declare Function MVBGetSeg Lib "DLGTIF.DLL" (ByVal Prm1 As Long) As Integer
Declare Function MVBGetOff Lib "DLGTIF.DLL" (ByVal Prm1 As Long) As Integer

Global Const SEEK_CUR = 1       ' DskFilPos constants
Global Const SEEK_END = 2       ' DskFilPos constants
Global Const SEEK_SET = 0       ' DskFilPos constants

