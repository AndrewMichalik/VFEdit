#
# Standard compiler command line switches
#	d       Redefined macros
#	c       No link
#	AM      Medium memory model
#	Gsw     Stack probes & Windows
#	G2      80286 Instruction Set
#	G3      80386 Instruction Set
#	Gh      C5.1 compatible object
#	Ox      Max optimization (Note: C6.00a float op error for "ei")
#	Od      No optimization
#	W2      Intermediate warning level
#	Zp      Structure packing
#	Zd      Symbolic Debug
#	Zi      CodeView Debug
#	NT      Named text (code area) follows
#	Alnw	Check for DS==SS
#	V       Imbed version string
#
# Standard linker command line switches
#   NOD     No default library
#   A:x     Segment alignment (default = 512 bytes)
#   SE:x    Set max number of segments

# -----------------------------------------------------------------------
# Compile and Link options (distribution & debug)
# -----------------------------------------------------------------------
!IFDEF deb
# ---- DEBUG ----
ap=masm/MX/V/ZI
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AM  -W3 -G2 -Gsw -Zp -Od -Zi
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AMw -W3 -G2 -Gsw -Zp -Od -Zi 
lp=$(linker)/NOD/NOE/A:16/CO$(L_Defs)
!ELSE
# ---- Default: DISTRIBUTION ----
ap=masm/MX/V
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AM  -W3 -G2 -Gsw -Zp -Ocglt  
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AMw -W3 -G2 -Gsw -Zp -Ocglt 
lp=$(linker)/NOD/NOE/A:16$(L_Defs)
!ENDIF

# -----------------------------------------------------------------------
# Version Control and Copyright Defs
# -----------------------------------------------------------------------
V_Note = "Copyright AJM, 800-234-VISI"

# -----------------------------------------------------------------------
# Hardware specific build paths
# -----------------------------------------------------------------------
C_Defs = WAV

# -----------------------------------------------------------------------
# Operating System version Library build paths & Copy Destination paths
# -----------------------------------------------------------------------
!IFDEF w30
# ---- Windows 3.0 ----
WinLib = libw+win87em+mlibcew
DLLLib = libw+win87em+mdllcew
W_Defs = -I\w30dev\include -DW30
W_Stub =
DstPth = ..\..\exedev^\
LibEnt = \w30dev\lib\libentry.obj
DLLExt = dll
linker = link
rc = \w30dev\rc $(W_Defs) -D$(C_Defs) 
rd = \w30dev\rc $(W_Defs) -D$(C_Defs) 
!ELSE
# ---- DEFAULT C8 & Win 3.1 ----
WinLib = libw+mlibcew
DLLLib = libw+mdllcew
W_Defs = -I\w31dev\include -DW31
W_Stub =
DstPth = ..\..\exedev^\
LibEnt =
DLLExt = dll
linker = link
rc = rc $(W_Defs) -D$(C_Defs) 
rd = rc $(W_Defs) -D$(C_Defs) 
!ENDIF

# -----------------------------------------------------------------------
# Standard inference rules
# -----------------------------------------------------------------------
.c{object\}.obj:
    $(cd) $(@B).c
.cpp{object\}.obj:
    $(cd) $(@B).cpp

# -----------------------------------------------------------------------
# The Executables, Libraries & Resources File List
# -----------------------------------------------------------------------
$(DstPth)$(C_Defs)mci.$(DLLExt): genmci.$(DLLExt)
    copy   genmci.$(DLLExt) $(DstPth)$(C_Defs)mci.$(DLLExt)
    copy   genmci.$(DLLExt) $(C_Defs)mci.$(DLLExt)

genmci.$(DLLExt): $(C_Defs)mci.def genmci.rc                            \
            object\genmci.obj                                           \
            object\mciqry.obj object\mcimsg.obj                         \
            object\mcicfg.obj object\mciwav.obj object\wavdio.obj       \
            object\dllsup.obj                                           \
            object\winmem.obj object\winmsg.obj
    $(lp)   $(LibEnt) @mciobj.rsp, genmci.$(DLLExt),                    \
            NUL, $(DLLLib) mmsystem, $(C_Defs)mci;
    $(rd)   genmci.rc genmci.$(DLLExt)
    implib  $(C_Defs)mci.lib $(C_Defs)mci.def

object\genmci.obj: genmci.c genmci.h mcisup.h mcimsg.h ..\os_dev\winmem.h ..\os_dev\winmsg.h
object\mciqry.obj: mciqry.c genmci.h ..\os_dev\winmem.h ..\pcmdev\genpcm.h
object\mcimsg.obj: mcimsg.c genmci.h mcisup.h mcimsg.h ..\os_dev\winmem.h ..\os_dev\winmsg.h
object\mcicfg.obj: mcicfg.c genmci.h mcisup.h mcimsg.h ..\os_dev\winmem.h ..\os_dev\winmsg.h
object\mciwav.obj: mciwav.c genmci.h mcisup.h mciwav.h ..\os_dev\winmem.h
object\wavdio.obj: wavdio.c genmci.h mcisup.h mciwav.h ..\os_dev\winmem.h
object\dllsup.obj: ..\os_dev\dllsup.c ..\os_dev\dllsup.h ..\os_dev\winmem.h
    $(cd)   ..\os_dev\dllsup.c
object\winmem.obj: ..\os_dev\winmem.c ..\os_dev\winmem.h
    $(cd)   ..\os_dev\winmem.c
object\winmsg.obj: ..\os_dev\winmsg.c ..\os_dev\winmsg.h
    $(cd)   ..\os_dev\winmsg.c
