#
# Standard compiler command line switches
#	d       Redefined macros
#	c       No link
#	AM      Medium memory model
#	Gsw     Stack probes & Windows
#	G2      80286 Instruction Set
#	G3      80386 Instruction Set
#	Gh      C5.1 compatible object
#	Ox      Max optimization (Note: C6.00a float op error for "ei")
#	Od      No optimization
#	W2      Intermediate warning level
#	Zp      Structure packing
#	Zd      Symbolic Debug
#	Zi      CodeView Debug
#	NT      Named text (code area) follows
#	Alnw	Check for DS==SS
#	V       Imbed version string
#
# Standard linker command line switches
#   NOD     No default library
#   A:x     Segment alignment (default = 512 bytes)
#   SE:x    Set max number of segments

# -----------------------------------------------------------------------
# Compile and Link options (distribution & debug)
# -----------------------------------------------------------------------
!IFDEF deb
# ---- DEBUG ----
ap=masm/MX/V/ZI
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) $(P_Defs) -AM  -W3 -G2 -Gsw -Zp -FPa -Od -Zi
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) $(P_Defs) -AMw -W3 -G2 -Gsw -Zp -FPa -Od -Zi
lp=$(linker)/NOD/NOE/A:16/CO$(L_Defs)
!ELSE
# ---- Default: DISTRIBUTION ----
ap=masm/MX/V
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) $(P_Defs) -AM  -W3 -G2 -Gsw -Zp -FPa -Ocglt   
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) $(P_Defs) -AMw -W3 -G2 -Gsw -Zp -FPa -Ocglt 
lp=$(linker)/NOD/NOE/A:16$(L_Defs)
!ENDIF

# -----------------------------------------------------------------------
# Version Control and Copyright Defs
# -----------------------------------------------------------------------
V_Note = "Copyright AJM, 800-234-VISI"

# -----------------------------------------------------------------------
# Hardware specific build paths
# -----------------------------------------------------------------------
!IFDEF g21
# ---- CCITT G.721 ----
C_Defs = G21
P_Defs = -D_P_DLG -D_P_G11 -D_P_MSW
!ELSE
!IFDEF har
# ---- Harris ----
C_Defs = HAR
P_Defs = -D_P_DLG -D_P_G11 -D_P_MSW
!ELSE
!IFDEF nwv
# ---- New Voice ----
C_Defs = NWV
P_Defs = -D_P_DLG -D_P_G11 -D_P_MSW
!ELSE
!IFDEF ptc
# ---- PTC ----
C_Defs = PTC
P_Defs = -D_P_DLG -D_P_G11 -D_P_MSW
!ELSE
!IFDEF rtx
# ---- Rhetorex ----
C_Defs = RTX
P_Defs = -D_P_DLG -D_P_G11 -D_P_MSW
!ELSE
# ---- DEFAULT Dialogic ----
C_Defs = DLG
P_Defs = -D_P_G11 -D_P_MSW
!ENDIF
!ENDIF
!ENDIF
!ENDIF
!ENDIF

# -----------------------------------------------------------------------
# Operating System version Library build paths & Copy Destination paths
# -----------------------------------------------------------------------
!IFDEF w30
# ---- Windows 3.0 ----
WinLib = libw+win87em+mlibcew
DLLLib = libw+win87em+mdllcew
W_Defs = -I\w30dev\include -DW30
W_Stub =
DstPth = ..\..\exedev^\
LibEnt = \w30dev\lib\libentry.obj
DLLExt = dll
linker = link
rc = \w30dev\rc $(W_Defs) -D$(C_Defs) 
rd = \w30dev\rc $(W_Defs) -D$(C_Defs)
!ELSE
# ---- DEFAULT C8 & Win 3.1 ----
WinLib = libw+mlibcew
DLLLib = libw+mdllcew
W_Defs = -DW31
W_Stub =
DstPth = ..\..\exedev^\
LibEnt =
DLLExt = dll
linker = link
rc = rc $(W_Defs) -D$(C_Defs)
rd = rc $(W_Defs) -D$(C_Defs)
!ENDIF

# -----------------------------------------------------------------------
# Standard inference rules
# -----------------------------------------------------------------------
.c{object\}.obj:
    $(cd) $(@B).c
.cpp{object\}.obj:
    $(cd) $(@B).cpp

# -----------------------------------------------------------------------
# The Executables, Libraries & Resources File List
# -----------------------------------------------------------------------
$(DstPth)$(C_Defs)pcm.$(DLLExt): genpcm.$(DLLExt)
    copy   genpcm.$(DLLExt) $(DstPth)$(C_Defs)pcm.$(DLLExt)
    copy   genpcm.$(DLLExt) $(C_Defs)pcm.$(DLLExt)

genpcm.$(DLLExt): $(C_Defs)pcm.def genpcm.rc $(C_Defs)xlt.lib           \
            object\genpcm.obj object\pcmini.obj object\pcmqry.obj       \
            object\pcmfio.obj object\pcmmxm.obj                         \
            object\blkcvt.obj object\mpcsup.obj                         \
            object\fillow.obj object\winmem.obj object\winmsg.obj
    $(lp)   $(LibEnt) @genobj.rsp, genpcm.$(DLLExt),                    \
            NUL, $(DLLLib) @$(C_Defs)lib.rsp, $(C_Defs)pcm;
    $(rd)   genpcm.rc genpcm.$(DLLExt)
    implib  $(C_Defs)pcm.lib $(C_Defs)pcm.def

object\genpcm.obj: genpcm.c genpcm.h pcmsup.h
object\pcmini.obj: pcmini.c genpcm.h pcmsup.h
object\pcmqry.obj: pcmqry.c genpcm.h pcmsup.h
object\pcmfio.obj: pcmfio.c genpcm.h pcmsup.h ..\fiodev\filutl.h
object\pcmmxm.obj: pcmmxm.c genpcm.h pcmsup.h ..\fiodev\filutl.h
object\blkcvt.obj: blkcvt.c genpcm.h pcmsup.h ..\fiodev\filutl.h
object\mpcsup.obj: mpcsup.c genpcm.h pcmsup.h
object\fillow.obj: ..\fiodev\fillow.c ..\fiodev\filutl.h
    $(cd)   ..\fiodev\fillow.c
object\winmem.obj: ..\os_dev\winmem.c ..\os_dev\winmem.h
    $(cd)   ..\os_dev\winmem.c
object\winmsg.obj: ..\os_dev\winmsg.c ..\os_dev\winmsg.h
    $(cd)   ..\os_dev\winmsg.c

