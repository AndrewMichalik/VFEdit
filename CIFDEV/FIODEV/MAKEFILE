#
# Standard compiler command line switches
#	d       Redefined macros
#	c       No link
#	AM      Medium memory model
#	Gsw     Stack probes & Windows
#	G2      80286 Instruction Set
#	G3      80386 Instruction Set
#	Gh      C5.1 compatible object
#	Ox      Max optimization (Note: C6.00a float op error for "ei")
#	Od      No optimization
#	W2      Intermediate warning level
#	Zp      Structure packing
#	Zd      Symbolic Debug
#	Zi      CodeView Debug
#	NT      Named text (code area) follows
#	Alnw	Check for DS==SS
#	V       Imbed version string
#
# Standard linker command line switches
#   NOD     No default library
#   A:x     Segment alignment (default = 512 bytes)
#   SE:x    Set max number of segments

# -----------------------------------------------------------------------
# Compile and Link options (distribution & debug)
# -----------------------------------------------------------------------
!IFDEF deb
# ---- DEBUG ----
ap=masm/MX/V/ZI
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AM  -W3 -G2 -Gsw -Zp -Od -Zi
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AMw -W3 -G2 -Gsw -Zp -Od -Zi 
lp=$(linker)/NOD/NOE/A:16/CO$(L_Defs)
!ELSE
# ---- Default: DISTRIBUTION ----
ap=masm/MX/V
cp=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AM  -W3 -G2 -Gsw -Zp -Ocglt  
cd=cl -c -FoObject\ $(W_Defs) -D$(C_Defs) -V$(V_Note) -AMw -W3 -G2 -Gsw -Zp -Ocglt 
lp=$(linker)/NOD/NOE/A:16$(L_Defs)
!ENDIF

# -----------------------------------------------------------------------
# Version Control and Copyright Defs
# -----------------------------------------------------------------------
V_Note = "Copyright AJM, 800-234-VISI"

# -----------------------------------------------------------------------
# Hardware specific build paths
# -----------------------------------------------------------------------
# ---- DEFAULT Dialogic ----
C_Defs = DLG

# -----------------------------------------------------------------------
# Operating System version Library build paths & Copy Destination paths
# -----------------------------------------------------------------------
!IFDEF w30
# ---- Windows 3.0 ----
WinLib = libw+win87em+mlibcew
DLLLib = libw+win87em+mdllcew
W_Defs = -I\w30dev\include -DW30
W_Stub =
DstPth = ..\..\exedev^\
LibEnt = \w30dev\lib\libentry.obj
DLLExt = dll
linker = link
rc = \w30dev\rc $(W_Defs) -D$(C_Defs) 
rd = \w30dev\rc $(W_Defs) -D$(C_Defs)
!ELSE
# ---- DEFAULT C8 & Win 3.1 ----
WinLib = libw+mlibcew
DLLLib = libw+mdllcew
W_Defs = -DW31
W_Stub =
DstPth = ..\..\exedev^\
LibEnt =
DLLExt = dll
linker = link
rc = rc $(W_Defs) -D$(C_Defs)
rd = rc $(W_Defs) -D$(C_Defs)
!ENDIF

# -----------------------------------------------------------------------
# Standard inference rules
# -----------------------------------------------------------------------
.c{object\}.obj:
    $(cd) $(@B).c
.cpp{object\}.obj:
    $(cd) $(@B).cpp

# -----------------------------------------------------------------------
# The Executables, Libraries & Resources File List
# -----------------------------------------------------------------------
$(DstPth)$(C_Defs)fio.$(DLLExt): genfio.$(DLLExt)
    copy   genfio.$(DLLExt) $(DstPth)$(C_Defs)fio.$(DLLExt)
    copy   genfio.$(DLLExt) $(C_Defs)fio.$(DLLExt)

genfio.$(DLLExt): $(C_Defs)fio.def genfio.rc                            \
            object\genfio.obj                                           \
            object\fioqry.obj object\fiomsg.obj                         \
            object\fiomas.obj object\fiowrk.obj object\fioseg.obj       \
            object\fiosnp.obj object\fiotxt.obj                         \
            object\fioofs.obj object\filfio.obj object\ff_w32.obj       \
            object\filsup.obj object\fillow.obj                         \
            object\wavfil.obj                                           \
            object\vbsfas.obj object\vbsfil.obj object\vbsmth.obj       \
            object\dllsup.obj object\winmem.obj object\winmsg.obj       \
            object\$(C_Defs)stb.obj
    $(lp)   $(LibEnt) @$(C_Defs)obj.rsp, genfio.$(DLLExt),              \
            NUL, $(DLLLib) mmsystem, $(C_Defs)fio;
    $(rd)   genfio.rc genfio.$(DLLExt)
    implib  $(C_Defs)fio.lib $(C_Defs)fio.def

object\genfio.obj: genfio.c genfio.h fiosup.h fiomsg.h 
object\fioqry.obj: fioqry.c genfio.h fiosup.h 
object\fiomsg.obj: fiomsg.c genfio.h fiosup.h fiomsg.h
object\fiomas.obj: fiomas.c genfio.h fiosup.h fiomsg.h vbsfil.h wavfil.h
object\fiowrk.obj: fiowrk.c genfio.h fiosup.h vbsfil.h wavfil.h
object\fioseg.obj: fioseg.c genfio.h fiosup.h vbsfil.h wavfil.h
object\fiosnp.obj: fiosnp.c genfio.h fiosup.h vbsfil.h wavfil.h
object\fiotxt.obj: fiotxt.c genfio.h fiosup.h vbsfil.h wavfil.h
object\fioofs.obj: fioofs.c genfio.h fiosup.h filutl.h
object\filfio.obj: filfio.c genfio.h fiosup.h filutl.h
object\ff_w32.obj: ff_w32.c genfio.h fiosup.h
object\filsup.obj: filsup.c filutl.h
object\fillow.obj: fillow.c filutl.h bitrev.tab
object\wavfil.obj: wavfil.c genfio.h filutl.h wavfil.h
object\vbsfas.obj: vbsfas.c genfio.h fiosup.h vbsfil.h 
object\vbsfil.obj: vbsfil.c genfio.h fiosup.h filutl.h vbsfil.h
object\vbsmth.obj: vbsmth.c genfio.h fiosup.h filutl.h vbsfil.h
object\$(C_Defs)stb.obj: $(C_Defs)stb.c genfio.h
object\dllsup.obj: ..\os_dev\dllsup.c ..\os_dev\dllsup.h ..\os_dev\winmem.h
    $(cd)   ..\os_dev\dllsup.c
object\winmem.obj: ..\os_dev\winmem.c ..\os_dev\winmem.h
    $(cd)   ..\os_dev\winmem.c
object\winmsg.obj: ..\os_dev\winmsg.c ..\os_dev\winmsg.h
    $(cd)   ..\os_dev\winmsg.c
